import React, { useState } from 'react'
import ModalPaper from '../../components/ModalPaper'
import Modal from '@material-ui/core/Modal'
import Button from '@material-ui/core/Button'
import TextField from '@material-ui/core/TextField'
import InputAdornment from '@material-ui/core/InputAdornment'
import VisibilityOff from '@material-ui/icons/VisibilityOff'
import Visibility from '@material-ui/icons/Visibility'
import IconButton from '@material-ui/core/IconButton'
import Paper from '@material-ui/core/Paper'
import LockIcon from '@material-ui/icons/Lock'
import LockOpenIcon from '@material-ui/icons/LockOpen'
import Cookies from 'js-cookie'
import { makeStyles } from '@material-ui/styles'

export default () => {
  
  // const initialUserId = Cookies.get('userId')
  const initialUserId = Cookies.get('user_id_cookie')
  const [password, setPassword] = useState('')
  const [isOpen, setOpen] = useState(false)
  const [isVisable, setVisable] = useState(false)
  const [userId, setUserId] = useState(initialUserId)

  const useStyles = makeStyles({
    smallIcon: {
      fontSize: 15,
      marginLeft: 5
    },
    button: { margin: 10 }
  })

  const classes = useStyles()

  const CORRECT_PASSWORD = 'mower'

  const updateUserId = userId => {
    Cookies.set('userId', userId, { expires: 3, path: '' })
    setUserId(userId)
  }

  const isLoggedIn = userId === '1'

  return (
    <>
      {isLoggedIn ? (
        <Button
          className={classes.button}
          variant="outlined"
          size="small"
          onClick={() => updateUserId('0')}
        >
          Logout
          <LockOpenIcon className={classes.smallIcon} />
        </Button>
      ) : (
        <Button
          className={classes.button}
          variant="outlined"
          size="small"
          onClick={() => setOpen(true)}
        >
          Login <LockIcon className={classes.smallIcon} />
        </Button>
      )}
      <Modal open={isOpen}>
        <ModalPaper closeFunction={() => setOpen(false)} title="Login">
          {!isLoggedIn ? (
            <>
              <TextField
                fullWidth
                autoComplete="off"
                autoFocus
                id="standard-name"
                label="Password"
                value={password}
                margin="normal"
                type={isVisable ? 'text' : 'password'}
                onChange={event => setPassword(event.target.value)}
                InputProps={{
                  endAdornment: (
                    <InputAdornment variant="filled" position="end">
                      <IconButton
                        aria-label="Toggle password visibility"
                        onClick={() => setVisable(!isVisable)}
                      >
                        {isVisable ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>
                  )
                }}
              />
              <Button
                fullWidth
                variant="contained"
                disabled={!(CORRECT_PASSWORD === password)}
                onClick={() => {
                  updateUserId('1')
                  setPassword('')
                }}
              >
                Login
              </Button>
            </>
          ) : (
            <Button style={{ marginTop: '1rem' }} fullWidth variant="contained">
              You're Logged In!
            </Button>
          )}
        </ModalPaper>
      </Modal>
    </>
  )
}
